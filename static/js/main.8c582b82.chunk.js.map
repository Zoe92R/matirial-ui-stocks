{"version":3,"sources":["store/reducers/systemReducer.js","store/reducers/stockReducer.js","store/reducers/index.js","store/store.js","cmps/StockPreview.jsx","cmps/StockList.jsx","services/asyncStorageService.js","services/stockService.js","pages/HomePage.jsx","routes.js","store/actions/stockAction.js","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","isLoading","stocks","rootReducer","combineReducers","systemModule","state","action","type","stockModule","stock","filter","_id","stockId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","StockPreview","id","TableCell","withStyles","root","borderBottom","color","MuiTableCell","useEffect","console","log","TableRow","style","first","textAlign","second","className","third","charAt","fourth","star","useStyles","makeStyles","head","borderTop","StockList","classes","Table","size","TableHead","TableBody","map","storageService","query","get","post","put","remove","entityType","items","entities","JSON","parse","localStorage","getItem","_save","Promise","resolve","entityId","a","find","entity","newEntity","_makeId","unshift","updatedEntity","idx","findIndex","splice","setItem","stringify","length","text","possible","i","Math","floor","random","gStocks","require","STORAGE_KEY","stockService","getStockById","res","routes","path","component","dispatch","useDispatch","useSelector","App","Fragment","route","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c582b82.chunk.js","sourcesContent":["const initialState = {\r\n    isLoading: false\r\n  };\r\n  \r\n  export function systemReducer (state = initialState, action = {}) {\r\n    switch (action.type) {\r\n      case 'LOADING_START':\r\n        return { ...state, isLoading: true }\r\n      case 'LOADING_DONE':\r\n        return { ...state, isLoading: false }\r\n      default: return state\r\n    }\r\n  }\r\n  ","const initialState = {\r\n    stocks: [],\r\n}\r\n\r\nexport function stockReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_STOCKS':\r\n            return { ...state, stocks: action.stocks }\r\n        case 'ADD_STOCK':\r\n            return { ...state, stocks: [action.stock, ...state.stocks] }\r\n        case 'UPDATE_STOCK':\r\n            return { ...state, stocks: [action.stock, ...state.stocks.filter(stock => action.stock._id !== stock._id)] }\r\n        case 'REMOVE_STOCK':\r\n            return { ...state, stocks: state.stocks.filter(stock => stock._id !== action.stockId) }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { systemReducer } from './systemReducer'\r\nimport { stockReducer } from './stockReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    systemModule: systemReducer,\r\n    stockModule: stockReducer,\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers/index.js'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport MuiTableCell from \"@material-ui/core/TableCell\";\r\nimport { withStyles, createStyles } from '@material-ui/core';\r\n\r\n\r\nexport function StockPreview({ stock, id }) {\r\n\r\n\r\n    const TableCell = withStyles({\r\n      root: {\r\n        borderBottom: \"none\",\r\n        color: \"#dedede\"\r\n      }\r\n    })(MuiTableCell);\r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n        return () => {\r\n        }\r\n    }, [id])\r\n\r\n    const getColor = () => {\r\n        return (stock.third.charAt(0) === '-')? \"percent red\" : \"percent green\"\r\n    }\r\n    \r\n\r\n    if (!stock) return <div>...LOADING</div>\r\n    return (\r\n        <TableRow>\r\n            <TableCell style={{color: \"#b1b0b0\"}}>{stock.first}</TableCell>\r\n            <TableCell style={{textAlign: \"right\"}}>{stock.second}</TableCell>\r\n            <TableCell className={getColor()}>{stock.third}</TableCell>\r\n            <TableCell>{stock.fourth}</TableCell>\r\n            <TableCell>\r\n            <StarIcon\r\n                className={`star-i ${stock.star? 'yellow' : 'grey'}`}/>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}","import { StockPreview } from './StockPreview.jsx'\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport {makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    head: {\r\n        color: '#dedede',\r\n        borderTop: '1px solid #ccc9c9',\r\n        borderBottom: 'none'\r\n    }\r\n});\r\n\r\nexport function StockList({ stocks }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n        <Table size=\"small\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell className={classes.head}>XRP</TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {stocks.map(stock => { if (stock.type === \"XRP\") return <StockPreview key={stock._id} stock={stock} id={stock._id} /> }\r\n                )}\r\n            </TableBody>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell className={classes.head}>BCH</TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                    <TableCell className={classes.head}></TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {stocks.map(stock => { if (stock.type === \"BCH\") return <StockPreview key={stock._id} stock={stock} id={stock._id} /> }\r\n                )}\r\n            </TableBody>\r\n        </Table>\r\n        </div>\r\n    )\r\n}","export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n}\r\n\r\nfunction query(entityType, items) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || [...items]\r\n    // console.log(entities, 'entities')\r\n    _save(entityType, entities)\r\n    return Promise.resolve(entities)\r\n}\r\n\r\nasync function get(entityType, entityId) {\r\n    // console.log('type, id in storage', entityType, entityId)\r\n    const entities = await query(entityType)\r\n    return entities.find(entity => entity._id === entityId)\r\n}\r\n\r\n\r\nasync function post(entityType, newEntity) {\r\n    // console.log('post in storage')\r\n    newEntity._id = _makeId()\r\n    const entities = await query(entityType, [])\r\n    entities.unshift(newEntity)\r\n    _save(entityType, entities)\r\n    return newEntity\r\n}\r\n\r\n\r\n\r\nasync function put(entityType, updatedEntity) {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n    entities.splice(idx, 1, updatedEntity)\r\n    _save(entityType, entities)\r\n    return updatedEntity\r\n}\r\n\r\nasync function remove(entityType, entityId) {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex(entity => entity._id === entityId)\r\n    entities.splice(idx, 1)\r\n    _save(entityType, entities)\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}","import { storageService } from './asyncStorageService'\r\n\r\nconst gStocks = require('../stocks.json')\r\n\r\nconst STORAGE_KEY = 'STOCK'\r\n\r\nexport const stockService = {\r\n    query,\r\n    getStockById,\r\n\r\n}\r\n\r\n\r\nasync function query(filterBy = {}) {\r\n    let stocks\r\n    try {\r\n        stocks = await storageService.query(STORAGE_KEY, gStocks)\r\n        console.log(stocks, 'storageService.query(STORAGE_KEY')\r\n        return stocks\r\n\r\n    } catch (err) {\r\n        console.log(err, 'err')\r\n        throw err\r\n    }\r\n\r\n}\r\n\r\nasync function getStockById(stockId) {\r\n    const res = await storageService.get(STORAGE_KEY, stockId)\r\n    console.log('get stock by id in service', res, stockId);\r\n    return res\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { StockList } from '../cmps/StockList.jsx'\r\nimport { loadStocks } from '../store/actions/stockAction.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const HomePage  = () =>{\r\n\r\n    const dispatch = useDispatch()\r\n    const stocks = useSelector(state => state.stockModule.stocks)\r\n    const isLoading = useSelector(state => state.systemModule.isLoading)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(loadStocks())\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n\r\n        if (isLoading) return <div>Loading...</div>\r\n        return (\r\n                <StockList stocks={stocks} />\r\n        )\r\n    \r\n}\r\n\r\n","import { HomePage } from './pages/HomePage.jsx'\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        component: HomePage\r\n    },\r\n    \r\n]\r\n","import { stockService } from \"../../services/stockService.js\"\r\n\r\n\r\nexport function loadStocks() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'LOADING_START' })\r\n            const stocks = await stockService.query()\r\n            dispatch({ type: 'SET_STOCKS', stocks })\r\n        } catch (err) {\r\n            console.log('stockActions: err in load stocks', err)\r\n        } finally {\r\n            dispatch({ type: 'LOADING_DONE' })\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport { routes } from './routes.js'\r\n\r\n\r\nexport const App = () => {\r\n  return (\r\n    <React.Fragment>\r\n      {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n    </React.Fragment>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store.js'\nimport './assets/styles/main.scss';\nimport { App } from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n   </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}